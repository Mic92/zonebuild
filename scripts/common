build_path_check() 
{
	! [ -d "${OUT_PATH}" ] && mkdir -p "${OUT_PATH}" 
	return 0
}


build_path_check

#[1]:config file  [2]:zone name [3]:zone file
cu_add_master_zone()
{
    if [ -f "${1}" ]; then
            cat ${1} | grep -q \"${2}\" && return 1
    else
    	echo "# Include in /etc/named.conf:
#
#include \"${1}\";
#
" > ${1}
    fi
    
	echo "zone \"${2}\" {
        type master;
        also-notify {
                ${MASTERS}
                };
        file \"`echo ${3} | sed -r 's/^[.]{1,2}//'`\";
        };
	" >> ${1}
	return 0
}

#[1]: nameserver [2]: zone
generate_soa()
{
		echo '$TTL' ${DEFAULT_TTL}
        echo "${2}. IN SOA ${1}. ${CONTACT_EMAIL}. (`date +%s` 14400 3600 1209600 7200)"
}

#[1]: registry file [2]:zone name [3]: options
generate_forward_zone ()
{
		rm -f /tmp/zb.common.$$.tmp
		echo "${3}" | egrep -q 'noglue' || {
                sed -n "s/^nserver:[ \t]\+\([^ \t]\+\)[ \t]\+\([0-9]\+\.[0-9.]\+\)[ \t]*$/\1. IN A \2/p" $1 >> /tmp/zb.common.$$.tmp
                sed -n "s/^nserver:[ \t]\+\([^ \t]\+\)[ \t]\+\([0-9a-fA-F]*:[0-9a-fA-F:]\+\)[ \t]*$/\1. IN AAAA \2/p" $1 >> /tmp/zb.common.$$.tmp
        }
		echo "${3}" | egrep -q 'nons' || {
        		sed -n "s/^nserver:[ \t]\+\([^ \t]\+\)$/${2}. IN NS \1./p" $1 >> /tmp/zb.common.$$.tmp
        		sed -n "s/^nserver:[ \t]\+\([^ \t]\+\)[ \t].*$/${2}. IN NS \1./p" $1 >> /tmp/zb.common.$$.tmp
        }        
        
        cat /tmp/zb.common.$$.tmp | uniq
}

#[1]: zone [2]: server [3]: flags 
axfr_zone()
{
	dig @${2} ${3} ${1} AXFR
	return $?
}

SYNC_SERVERS=(  "mtn://mtn.nixnodes.dn42/?net.dn42.*"
		"mtn://mtn.crest.dn42/?net.dn42.*"
                "mtn://dn42.smrsh.net/?net.dn42.*"
#                "mtn://46.4.248.203/?net.dn42.*"
)

mtn_io_all ()
{
  [ -z "$1" ] && echo "missing cmd" && return 2
  r=0
  for i in "${SYNC_SERVERS[@]}"; do
        mtn $1 $i $2; r=$[r+$?]
  done
  return $r
}

# [1]: directory
mtn_pull() {
	old_dir=${PWD}
	cd ${1}
	
	mtn_io_all pull &&
		mtn merge &&
			mtn update || return 2
			
	cd ${old_dir}
}


print_usage_and_exit() 
{
	echo "${USAGE_STR}"
	exit 2
}